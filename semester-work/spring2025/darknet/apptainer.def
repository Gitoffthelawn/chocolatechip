Bootstrap: docker
From: nvidia/cuda:12.8.0-cudnn-devel-ubuntu24.04

%environment
    export DEBIAN_FRONTEND=noninteractive
    # Include CUDA binaries, system binaries, and the virtual environment's binaries
    export PATH="/usr/local/cuda/bin:/usr/local/bin:/opt/venv/bin:${PATH}"
    export LD_LIBRARY_PATH="/usr/local/cuda/lib64:${LD_LIBRARY_PATH}"
    export PYTHONPATH="/opt/app/src:${PYTHONPATH}"

%files
    semester-work/spring2025/darknet/artifacts/build_darknet.sh    /usr/local/bin/build_darknet.sh
    src                                                            /opt/app/


%post
    # Update package list and install dependencies
    apt-get update && apt-get install -y build-essential git libopencv-dev file cmake python3-pip python3-venv fio
    # Create a virtual environment in /opt/venv inside the container
    python3 -m venv /opt/venv
    # Activate the virtual environment and upgrade pip
    . /opt/venv/bin/activate
    pip install --upgrade pip
    # Install the required Python packages in the virtual environment
    pip install cloudmesh-common
    pip install git+https://github.com/cloudmesh/cloudmesh-gpu.git
    pip install pycocotools
    pip install imagesize
    # Create the working directory (for non-bound scenarios)
    mkdir -p /workspace
    # Make the script executable
    chmod +x /usr/local/bin/build_darknet.sh

%runscript
    /usr/local/bin/build_darknet.sh


    ls /host_workspace/darknet/build/src-cli
    /host_workspace/darknet/build/src-cli/darknet version

    python -u -m chocolatechip.model_training.train --profile FisheyeTrafficDarknetLocal
